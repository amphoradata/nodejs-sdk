/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a Address.
 */
class Address {
  /**
   * Create a Address.
   * @property {string} [streetNumber]
   * @property {string} [streetName]
   * @property {string} [municipalitySubdivision]
   * @property {string} [municipality]
   * @property {string} [countrySecondarySubdivision]
   * @property {string} [countrySubdivision]
   * @property {string} [postalCode]
   * @property {string} [countryCode]
   * @property {string} [country]
   * @property {string} [countryCodeIso3]
   * @property {string} [freeformAddress]
   * @property {string} [localName]
   */
  constructor() {
  }

  /**
   * Defines the metadata of Address
   *
   * @returns {object} metadata of Address
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Address',
      type: {
        name: 'Composite',
        className: 'Address',
        modelProperties: {
          streetNumber: {
            required: false,
            serializedName: 'streetNumber',
            type: {
              name: 'String'
            }
          },
          streetName: {
            required: false,
            serializedName: 'streetName',
            type: {
              name: 'String'
            }
          },
          municipalitySubdivision: {
            required: false,
            serializedName: 'municipalitySubdivision',
            type: {
              name: 'String'
            }
          },
          municipality: {
            required: false,
            serializedName: 'municipality',
            type: {
              name: 'String'
            }
          },
          countrySecondarySubdivision: {
            required: false,
            serializedName: 'countrySecondarySubdivision',
            type: {
              name: 'String'
            }
          },
          countrySubdivision: {
            required: false,
            serializedName: 'countrySubdivision',
            type: {
              name: 'String'
            }
          },
          postalCode: {
            required: false,
            serializedName: 'postalCode',
            type: {
              name: 'String'
            }
          },
          countryCode: {
            required: false,
            serializedName: 'countryCode',
            type: {
              name: 'String'
            }
          },
          country: {
            required: false,
            serializedName: 'country',
            type: {
              name: 'String'
            }
          },
          countryCodeIso3: {
            required: false,
            serializedName: 'countryCodeIso3',
            type: {
              name: 'String'
            }
          },
          freeformAddress: {
            required: false,
            serializedName: 'freeformAddress',
            type: {
              name: 'String'
            }
          },
          localName: {
            required: false,
            serializedName: 'localName',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = Address;
