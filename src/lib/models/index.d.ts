/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as moment from "moment";

export interface BasicAmphora {
  id?: string;
  isDeleted?: boolean;
  createdDate?: Date;
  name: string;
  price: number;
  labels?: string;
}

export interface TermsAndConditions {
  id: string;
  name: string;
  contents: string;
}

export interface Signal {
  id?: string;
  property?: string;
  valueType?: string;
  attributes?: { [propertyName: string]: string };
}

export interface TokenRequest {
  username: string;
  password: string;
}

export interface EntryPoint {
  type?: string;
  position?: any;
}

export interface Result {
  type?: string;
  id?: string;
  score?: number;
  address?: any;
  position?: any;
  viewport?: any;
  entryPoints?: EntryPoint[];
  info?: string;
  poi?: any;
}

export interface FuzzySearchResponse {
  summary?: any;
  results?: Result[];
}

export interface Summary {
  query?: string;
  queryType?: string;
  queryTime?: number;
  numResults?: number;
  offset?: number;
  totalResults?: number;
  fuzzyLevel?: number;
}

export interface Address {
  streetNumber?: string;
  streetName?: string;
  municipalitySubdivision?: string;
  municipality?: string;
  countrySecondarySubdivision?: string;
  countrySubdivision?: string;
  postalCode?: string;
  countryCode?: string;
  country?: string;
  countryCodeIso3?: string;
  freeformAddress?: string;
  localName?: string;
}

export interface Position {
  lat?: number;
  lon?: number;
}

export interface Viewport {
  topLeftPoint?: any;
  btmRightPoint?: any;
}

export interface CategorySet {
  id?: number;
}

export interface Name {
  nameLocale?: string;
  nameName?: string;
}

export interface Classification {
  code?: string;
  names?: Name[];
}

export interface Poi {
  name?: string;
  phone?: string;
  categorySet?: CategorySet[];
  categories?: string[];
  classifications?: Classification[];
}

export interface Componentsschemasbasicamphoraallof1 {
  name: string;
  price: number;
  labels?: string;
}

export interface Entity {
  id?: string;
  isDeleted?: boolean;
  createdDate?: Date;
}

export interface Restriction {
  kind?: any;
  /**
   * Target Organisation's Id
  */
  targetOrganisationId?: string;
}

export interface GenericResponse {
  message?: string;
}

export interface Organisation {
  id?: string;
  isDeleted?: boolean;
  createdDate?: Date;
  name?: string;
  about?: string;
  websiteUrl?: string;
  address?: string;
}

export interface Componentsschemasorganisationallof1 {
  name?: string;
  about?: string;
  websiteUrl?: string;
  address?: string;
}

export interface AmphoraUser {
  id?: string;
  email?: string;
  about?: string;
  fullName?: string;
  organisationId?: string;
  userName?: string;
  lastModified?: Date;
}

export interface Account {
  balance?: number;
}

export interface ProblemDetails {
  type?: string;
  title?: string;
  status?: number;
  detail?: string;
  instance?: string;
  extensions?: { [propertyName: string]: any };
}

export interface AttributeStore {
  attributes?: { [propertyName: string]: string };
}

export interface DetailedAmphora {
  id?: string;
  isDeleted?: boolean;
  createdDate?: Date;
  name: string;
  price: number;
  labels?: string;
  description: string;
  /**
   * @summary Latitude
  */
  lat?: number;
  /**
   * @summary Longitude
  */
  lon?: number;
  termsAndConditionsId?: string;
  fileAttributes?: { [propertyName: string]: AttributeStore };
  organisationId?: string;
  /**
   * @summary Purchase Count
  */
  purchaseCount?: number;
}

export interface Componentsschemasdetailedamphoraallof1 {
  organisationId?: string;
  /**
   * @summary Purchase Count
  */
  purchaseCount?: number;
}

export interface EditAmphora {
  id?: string;
  isDeleted?: boolean;
  createdDate?: Date;
  name: string;
  price: number;
  labels?: string;
  description: string;
  /**
   * @summary Latitude
  */
  lat?: number;
  /**
   * @summary Longitude
  */
  lon?: number;
  termsAndConditionsId?: string;
  fileAttributes?: { [propertyName: string]: AttributeStore };
}

export interface Componentsschemaseditamphoraallof1 {
  description: string;
  /**
   * @summary Latitude
  */
  lat?: number;
  /**
   * @summary Longitude
  */
  lon?: number;
  termsAndConditionsId?: string;
  fileAttributes?: { [propertyName: string]: AttributeStore };
}

export interface CreateAmphora {
  id?: string;
  isDeleted?: boolean;
  createdDate?: Date;
  name: string;
  price: number;
  labels?: string;
  description: string;
  /**
   * @summary Latitude
  */
  lat?: number;
  /**
   * @summary Longitude
  */
  lon?: number;
  termsAndConditionsId?: string;
}

export interface Componentsschemascreateamphoraallof1 {
  description: string;
  /**
   * @summary Latitude
  */
  lat?: number;
  /**
   * @summary Longitude
  */
  lon?: number;
  termsAndConditionsId?: string;
}

export interface UploadResponse {
  url?: string;
}

export interface UpdateSignal {
  meta?: { [propertyName: string]: string };
}

export interface PropertyValues {
  name?: string;
  type?: string;
  values?: any[];
}

export interface QueryResultPage {
  continuationToken?: string;
  timestamps?: Date[];
  properties?: PropertyValues[];
}

export interface Componentsschemasqueryresultpageallof1 {
  timestamps?: Date[];
  properties?: PropertyValues[];
}

export interface Componentsschemaspropertyvaluesallof1 {
  values?: any[];
}

export interface EventProperty {
  name?: string;
  type?: string;
}

export interface PagedResponse {
  continuationToken?: string;
}

export interface QueryRequest {
  getEvents?: any;
  getSeries?: any;
  aggregateSeries?: any;
}

export interface GetEvents {
  timeSeriesId?: any[];
  searchSpan?: any;
  filter?: any;
  projectedProperties?: string[];
}

export interface DateTimeRange {
  from?: Date;
  to?: Date;
}

export interface Tsx {
  tsx?: string;
}

export interface Variable {
  filter?: any;
  /**
   * Polymorphic Discriminator
  */
  kind: string;
}

export interface GetSeries {
  timeSeriesId?: any[];
  searchSpan?: any;
  filter?: any;
  projectedVariables?: string[];
  inlineVariables?: { [propertyName: string]: Variable };
}

export interface NumericVariable {
  filter?: any;
  value?: any;
  aggregation?: any;
  /**
   * Polymorphic Discriminator
  */
  kind: string;
}

export interface AggregateVariable {
  filter?: any;
  aggregation?: any;
  /**
   * Polymorphic Discriminator
  */
  kind: string;
}

export interface AggregateSeries {
  timeSeriesId?: any[];
  searchSpan?: any;
  filter?: any;
  interval?: string;
  projectedVariables?: string[];
  inlineVariables?: { [propertyName: string]: Variable };
}
