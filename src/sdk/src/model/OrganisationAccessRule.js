/**
 * Amphora Data Api
 * API for interacting with the Amphora Data platform.
 *
 * The version of the OpenAPI document: 0.9.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccessRuleDtoBase from './AccessRuleDtoBase';
import OrganisationAccessRuleAllOf from './OrganisationAccessRuleAllOf';

/**
 * The OrganisationAccessRule model module.
 * @module model/OrganisationAccessRule
 * @version 0.9.7
 */
class OrganisationAccessRule {
    /**
     * Constructs a new <code>OrganisationAccessRule</code>.
     * @alias module:model/OrganisationAccessRule
     * @implements module:model/AccessRuleDtoBase
     * @implements module:model/OrganisationAccessRuleAllOf
     * @param organisationId {String} 
     */
    constructor(organisationId) { 
        AccessRuleDtoBase.initialize(this);OrganisationAccessRuleAllOf.initialize(this, organisationId);
        OrganisationAccessRule.initialize(this, organisationId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, organisationId) { 
        obj['organisationId'] = organisationId;
    }

    /**
     * Constructs a <code>OrganisationAccessRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrganisationAccessRule} obj Optional instance to populate.
     * @return {module:model/OrganisationAccessRule} The populated <code>OrganisationAccessRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrganisationAccessRule();
            AccessRuleDtoBase.constructFromObject(data, obj);
            OrganisationAccessRuleAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('allowOrDeny')) {
                obj['allowOrDeny'] = ApiClient.convertToType(data['allowOrDeny'], 'String');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
            }
            if (data.hasOwnProperty('organisationId')) {
                obj['organisationId'] = ApiClient.convertToType(data['organisationId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
OrganisationAccessRule.prototype['id'] = undefined;

/**
 * @member {String} allowOrDeny
 */
OrganisationAccessRule.prototype['allowOrDeny'] = undefined;

/**
 * @member {Number} priority
 */
OrganisationAccessRule.prototype['priority'] = undefined;

/**
 * @member {String} organisationId
 */
OrganisationAccessRule.prototype['organisationId'] = undefined;


// Implement AccessRuleDtoBase interface:
/**
 * @member {String} id
 */
AccessRuleDtoBase.prototype['id'] = undefined;
/**
 * @member {String} allowOrDeny
 */
AccessRuleDtoBase.prototype['allowOrDeny'] = undefined;
/**
 * @member {Number} priority
 */
AccessRuleDtoBase.prototype['priority'] = undefined;
// Implement OrganisationAccessRuleAllOf interface:
/**
 * @member {String} organisationId
 */
OrganisationAccessRuleAllOf.prototype['organisationId'] = undefined;




export default OrganisationAccessRule;

