/**
 * Amphora Data Api
 * API for interacting with the Amphora Data platform.
 *
 * The version of the OpenAPI document: 0.9.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventProperty from './EventProperty';
import PropertyValuesAllOf from './PropertyValuesAllOf';

/**
 * The PropertyValues model module.
 * @module model/PropertyValues
 * @version 0.9.7
 */
class PropertyValues {
    /**
     * Constructs a new <code>PropertyValues</code>.
     * @alias module:model/PropertyValues
     * @implements module:model/EventProperty
     * @implements module:model/PropertyValuesAllOf
     */
    constructor() { 
        EventProperty.initialize(this);PropertyValuesAllOf.initialize(this);
        PropertyValues.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PropertyValues</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PropertyValues} obj Optional instance to populate.
     * @return {module:model/PropertyValues} The populated <code>PropertyValues</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PropertyValues();
            EventProperty.constructFromObject(data, obj);
            PropertyValuesAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], [Object]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} name
 */
PropertyValues.prototype['name'] = undefined;

/**
 * @member {String} type
 */
PropertyValues.prototype['type'] = undefined;

/**
 * @member {Array.<Object>} values
 */
PropertyValues.prototype['values'] = undefined;


// Implement EventProperty interface:
/**
 * @member {String} name
 */
EventProperty.prototype['name'] = undefined;
/**
 * @member {String} type
 */
EventProperty.prototype['type'] = undefined;
// Implement PropertyValuesAllOf interface:
/**
 * @member {Array.<Object>} values
 */
PropertyValuesAllOf.prototype['values'] = undefined;




export default PropertyValues;

