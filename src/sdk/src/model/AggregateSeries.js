/**
 * Amphora Data Api
 * API for interacting with the Amphora Data platform.
 *
 * The version of the OpenAPI document: 0.9.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OneOfDateTimeRange from './OneOfDateTimeRange';
import OneOfTsx from './OneOfTsx';
import Variable from './Variable';

/**
 * The AggregateSeries model module.
 * @module model/AggregateSeries
 * @version 0.9.7
 */
class AggregateSeries {
    /**
     * Constructs a new <code>AggregateSeries</code>.
     * @alias module:model/AggregateSeries
     */
    constructor() { 
        
        AggregateSeries.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AggregateSeries</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AggregateSeries} obj Optional instance to populate.
     * @return {module:model/AggregateSeries} The populated <code>AggregateSeries</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AggregateSeries();

            if (data.hasOwnProperty('timeSeriesId')) {
                obj['timeSeriesId'] = ApiClient.convertToType(data['timeSeriesId'], [Object]);
            }
            if (data.hasOwnProperty('searchSpan')) {
                obj['searchSpan'] = ApiClient.convertToType(data['searchSpan'], OneOfDateTimeRange);
            }
            if (data.hasOwnProperty('filter')) {
                obj['filter'] = ApiClient.convertToType(data['filter'], OneOfTsx);
            }
            if (data.hasOwnProperty('interval')) {
                obj['interval'] = ApiClient.convertToType(data['interval'], 'String');
            }
            if (data.hasOwnProperty('projectedVariables')) {
                obj['projectedVariables'] = ApiClient.convertToType(data['projectedVariables'], ['String']);
            }
            if (data.hasOwnProperty('inlineVariables')) {
                obj['inlineVariables'] = ApiClient.convertToType(data['inlineVariables'], {'String': Variable});
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<Object>} timeSeriesId
 */
AggregateSeries.prototype['timeSeriesId'] = undefined;

/**
 * @member {module:model/OneOfDateTimeRange} searchSpan
 */
AggregateSeries.prototype['searchSpan'] = undefined;

/**
 * @member {module:model/OneOfTsx} filter
 */
AggregateSeries.prototype['filter'] = undefined;

/**
 * @member {String} interval
 */
AggregateSeries.prototype['interval'] = undefined;

/**
 * @member {Array.<String>} projectedVariables
 */
AggregateSeries.prototype['projectedVariables'] = undefined;

/**
 * @member {Object.<String, module:model/Variable>} inlineVariables
 */
AggregateSeries.prototype['inlineVariables'] = undefined;






export default AggregateSeries;

