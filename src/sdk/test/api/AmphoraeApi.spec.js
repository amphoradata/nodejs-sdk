/**
 * Amphora Data Api
 * API for interacting with the Amphora Data platform.
 *
 * The version of the OpenAPI document: 0.9.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Amphoradata);
  }
}(this, function(expect, Amphoradata) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Amphoradata.AmphoraeApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AmphoraeApi', function() {
    describe('amphoraeAccessControlsCreateForOrganisation', function() {
      it('should call amphoraeAccessControlsCreateForOrganisation successfully', function(done) {
        //uncomment below and update the code to test amphoraeAccessControlsCreateForOrganisation
        //instance.amphoraeAccessControlsCreateForOrganisation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeAccessControlsCreateForUser', function() {
      it('should call amphoraeAccessControlsCreateForUser successfully', function(done) {
        //uncomment below and update the code to test amphoraeAccessControlsCreateForUser
        //instance.amphoraeAccessControlsCreateForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeAccessControlsDelete', function() {
      it('should call amphoraeAccessControlsDelete successfully', function(done) {
        //uncomment below and update the code to test amphoraeAccessControlsDelete
        //instance.amphoraeAccessControlsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeAccessControlsGetOrganisationRules', function() {
      it('should call amphoraeAccessControlsGetOrganisationRules successfully', function(done) {
        //uncomment below and update the code to test amphoraeAccessControlsGetOrganisationRules
        //instance.amphoraeAccessControlsGetOrganisationRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeAccessControlsGetUserRules', function() {
      it('should call amphoraeAccessControlsGetUserRules successfully', function(done) {
        //uncomment below and update the code to test amphoraeAccessControlsGetUserRules
        //instance.amphoraeAccessControlsGetUserRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeCreate', function() {
      it('should call amphoraeCreate successfully', function(done) {
        //uncomment below and update the code to test amphoraeCreate
        //instance.amphoraeCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeDelete', function() {
      it('should call amphoraeDelete successfully', function(done) {
        //uncomment below and update the code to test amphoraeDelete
        //instance.amphoraeDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeFilesCreateFileRequest', function() {
      it('should call amphoraeFilesCreateFileRequest successfully', function(done) {
        //uncomment below and update the code to test amphoraeFilesCreateFileRequest
        //instance.amphoraeFilesCreateFileRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeFilesDeleteFile', function() {
      it('should call amphoraeFilesDeleteFile successfully', function(done) {
        //uncomment below and update the code to test amphoraeFilesDeleteFile
        //instance.amphoraeFilesDeleteFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeFilesDownloadFile', function() {
      it('should call amphoraeFilesDownloadFile successfully', function(done) {
        //uncomment below and update the code to test amphoraeFilesDownloadFile
        //instance.amphoraeFilesDownloadFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeFilesListFiles', function() {
      it('should call amphoraeFilesListFiles successfully', function(done) {
        //uncomment below and update the code to test amphoraeFilesListFiles
        //instance.amphoraeFilesListFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeFilesWriteFileMetadata', function() {
      it('should call amphoraeFilesWriteFileMetadata successfully', function(done) {
        //uncomment below and update the code to test amphoraeFilesWriteFileMetadata
        //instance.amphoraeFilesWriteFileMetadata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeRead', function() {
      it('should call amphoraeRead successfully', function(done) {
        //uncomment below and update the code to test amphoraeRead
        //instance.amphoraeRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeSignalsCreateSignal', function() {
      it('should call amphoraeSignalsCreateSignal successfully', function(done) {
        //uncomment below and update the code to test amphoraeSignalsCreateSignal
        //instance.amphoraeSignalsCreateSignal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeSignalsGetSignal', function() {
      it('should call amphoraeSignalsGetSignal successfully', function(done) {
        //uncomment below and update the code to test amphoraeSignalsGetSignal
        //instance.amphoraeSignalsGetSignal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeSignalsGetSignals', function() {
      it('should call amphoraeSignalsGetSignals successfully', function(done) {
        //uncomment below and update the code to test amphoraeSignalsGetSignals
        //instance.amphoraeSignalsGetSignals(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeSignalsUpdateSignal', function() {
      it('should call amphoraeSignalsUpdateSignal successfully', function(done) {
        //uncomment below and update the code to test amphoraeSignalsUpdateSignal
        //instance.amphoraeSignalsUpdateSignal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeSignalsUploadSignal', function() {
      it('should call amphoraeSignalsUploadSignal successfully', function(done) {
        //uncomment below and update the code to test amphoraeSignalsUploadSignal
        //instance.amphoraeSignalsUploadSignal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeSignalsUploadSignal2', function() {
      it('should call amphoraeSignalsUploadSignal2 successfully', function(done) {
        //uncomment below and update the code to test amphoraeSignalsUploadSignal2
        //instance.amphoraeSignalsUploadSignal2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeSignalsUploadSignalBatch', function() {
      it('should call amphoraeSignalsUploadSignalBatch successfully', function(done) {
        //uncomment below and update the code to test amphoraeSignalsUploadSignalBatch
        //instance.amphoraeSignalsUploadSignalBatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeSignalsUploadSignalBatch2', function() {
      it('should call amphoraeSignalsUploadSignalBatch2 successfully', function(done) {
        //uncomment below and update the code to test amphoraeSignalsUploadSignalBatch2
        //instance.amphoraeSignalsUploadSignalBatch2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('amphoraeUpdate', function() {
      it('should call amphoraeUpdate successfully', function(done) {
        //uncomment below and update the code to test amphoraeUpdate
        //instance.amphoraeUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('purchasesPurchase', function() {
      it('should call purchasesPurchase successfully', function(done) {
        //uncomment below and update the code to test purchasesPurchase
        //instance.purchasesPurchase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
